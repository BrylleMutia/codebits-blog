{"ast":null,"code":"import \"./global/global.css\"; // import withRedux from 'next-redux-wrapper';\n// import { Provider } from 'react-redux';\n// import makeStore from '../store/index';\n// import App from \"next/app\";\n\nimport React from \"react\"; // import { Provider } from \"react-redux\";\n// import { createWrapper } from \"next-redux-wrapper\";\n\nimport { wrapper } from \"../store/index\"; // This default export is required in a new `pages/_app.js` file.\n// function MyApp({ Component, pageProps, store, ...rest }) {\n//     return (\n//         <Provider store={store}>\n//             <Component {...pageProps} />\n//         </Provider>\n//     );\n// }\n// export default withRedux(makeStore)(MyApp);\n// function MyApp({ Component, pageProps, store, ...rest }) {\n//     return (\n//         <Provider store={store}>\n//             <Component {...pageProps} />\n//         </Provider>\n//     );\n// }\n// const makeStore = () => store;\n// const wrapper = createWrapper(makeStore);\n// export default wrapper.withRedux(MyApp);\n// import App from \"next/app\";\n// import { Provider } from \"react-redux\";\n// import { createWrapper } from \"next-redux-wrapper\";\n// import React from \"react\";\n// import store from \"../store/index\";\n// export class MyApp extends App {\n//     static async getInitialProps({ Component, ctx }) {\n//         const appProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//         console.log(appProps);\n//         return { appProps: appProps };\n//     }\n//     render() {\n//         const { Component, appProps } = this.props;\n//         return (\n//             <Provider store={store}>\n//                 <Component {...appProps} />\n//             </Provider>\n//         );\n//     }\n// }\n// const makeStore = () => store;\n// const wrapper = createWrapper(makeStore);\n// export default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["C:/Users/Brylle Mutia/Downloads/SAVED/Python/CODE PLAYGROUND/WEB PROJECTS/## WEBAPPS/#16 CODEBITS (BLOG)/client/src/pages/_app.js"],"names":["React","wrapper"],"mappings":"AAAA,OAAO,qBAAP,C,CACA;AACA;AACA;AAEA;;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,OAAT,QAAwB,gBAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import \"./global/global.css\";\r\n// import withRedux from 'next-redux-wrapper';\r\n// import { Provider } from 'react-redux';\r\n// import makeStore from '../store/index';\r\n\r\n// import App from \"next/app\";\r\nimport React from \"react\";\r\n// import { Provider } from \"react-redux\";\r\n// import { createWrapper } from \"next-redux-wrapper\";\r\nimport { wrapper } from \"../store/index\";\r\n\r\n// This default export is required in a new `pages/_app.js` file.\r\n// function MyApp({ Component, pageProps, store, ...rest }) {\r\n//     return (\r\n//         <Provider store={store}>\r\n//             <Component {...pageProps} />\r\n//         </Provider>\r\n//     );\r\n// }\r\n\r\n// export default withRedux(makeStore)(MyApp);\r\n\r\n// function MyApp({ Component, pageProps, store, ...rest }) {\r\n//     return (\r\n//         <Provider store={store}>\r\n//             <Component {...pageProps} />\r\n//         </Provider>\r\n//     );\r\n// }\r\n\r\n// const makeStore = () => store;\r\n// const wrapper = createWrapper(makeStore);\r\n\r\n// export default wrapper.withRedux(MyApp);\r\n\r\n// import App from \"next/app\";\r\n// import { Provider } from \"react-redux\";\r\n// import { createWrapper } from \"next-redux-wrapper\";\r\n// import React from \"react\";\r\n// import store from \"../store/index\";\r\n\r\n// export class MyApp extends App {\r\n//     static async getInitialProps({ Component, ctx }) {\r\n//         const appProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n//         console.log(appProps);\r\n//         return { appProps: appProps };\r\n//     }\r\n\r\n//     render() {\r\n//         const { Component, appProps } = this.props;\r\n\r\n//         return (\r\n//             <Provider store={store}>\r\n//                 <Component {...appProps} />\r\n//             </Provider>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const makeStore = () => store;\r\n// const wrapper = createWrapper(makeStore);\r\n// export default wrapper.withRedux(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}