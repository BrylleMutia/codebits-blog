{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brylle Mutia\\\\Downloads\\\\SAVED\\\\Python\\\\CODE PLAYGROUND\\\\WEB PROJECTS\\\\## WEBAPPS\\\\#16 CODEBITS (BLOG)\\\\client\\\\src\\\\components\\\\articles\\\\switches\\\\Switches.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { switches } from \"./Switches.module.css\";\nimport { horizontal_spacer } from \"../../../App.module.css\";\nimport { switchOn, switchOff } from \"../../../actions/controlActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport cx from \"classnames\";\n\nconst Switches = ({\n  categories\n}) => {\n  const dispatch = useDispatch();\n  const activeSwitches = useSelector(state => state.controls.switches); // toggle switches\n\n  const handleToggleSwitch = switchName => {\n    if (activeSwitches.includes(switchName)) {\n      dispatch(switchOff(switchName));\n    } else {\n      dispatch(switchOn(switchName));\n    }\n  }; // turn category switches on by default\n  // useEffect(() => {\n  //     categories.map((category) => handleToggleSwitch(category));\n  // }, []);\n\n\n  const getSwitchStyles = switchName => {\n    return {\n      backgroundColor: activeSwitches.includes(switchName) && \"var(--color-accent)\"\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: cx(horizontal_spacer, switches),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, categories.map((category, index) => __jsx(\"button\", {\n    style: getSwitchStyles(category),\n    onClick: () => handleToggleSwitch(category),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, category)));\n};\n\nexport default Switches;","map":{"version":3,"sources":["C:/Users/Brylle Mutia/Downloads/SAVED/Python/CODE PLAYGROUND/WEB PROJECTS/## WEBAPPS/#16 CODEBITS (BLOG)/client/src/components/articles/switches/Switches.jsx"],"names":["React","useEffect","switches","horizontal_spacer","switchOn","switchOff","useSelector","useDispatch","cx","Switches","categories","dispatch","activeSwitches","state","controls","handleToggleSwitch","switchName","includes","getSwitchStyles","backgroundColor","map","category","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,iCAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,EAAP,MAAe,YAAf;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,cAAc,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeZ,QAA3B,CAAlC,CAFiC,CAIjC;;AACA,QAAMa,kBAAkB,GAAIC,UAAD,IAAgB;AACvC,QAAIJ,cAAc,CAACK,QAAf,CAAwBD,UAAxB,CAAJ,EAAyC;AACrCL,MAAAA,QAAQ,CAACN,SAAS,CAACW,UAAD,CAAV,CAAR;AACH,KAFD,MAEO;AACHL,MAAAA,QAAQ,CAACP,QAAQ,CAACY,UAAD,CAAT,CAAR;AACH;AACJ,GAND,CALiC,CAajC;AACA;AACA;AACA;;;AAEA,QAAME,eAAe,GAAIF,UAAD,IAAgB;AACpC,WAAO;AACHG,MAAAA,eAAe,EAAEP,cAAc,CAACK,QAAf,CAAwBD,UAAxB,KAAuC;AADrD,KAAP;AAGH,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAER,EAAE,CAACL,iBAAD,EAAoBD,QAApB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,UAAU,CAACU,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,KACZ;AAAQ,IAAA,KAAK,EAAEJ,eAAe,CAACG,QAAD,CAA9B;AAA0C,IAAA,OAAO,EAAE,MAAMN,kBAAkB,CAACM,QAAD,CAA3E;AAAuF,IAAA,GAAG,EAAEC,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADH,CADL,CADJ;AASH,CAjCD;;AAmCA,eAAeZ,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { switches } from \"./Switches.module.css\";\r\nimport { horizontal_spacer } from \"../../../App.module.css\";\r\n\r\nimport { switchOn, switchOff } from \"../../../actions/controlActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport cx from \"classnames\";\r\n\r\nconst Switches = ({ categories }) => {\r\n    const dispatch = useDispatch();\r\n    const activeSwitches = useSelector((state) => state.controls.switches);\r\n\r\n    // toggle switches\r\n    const handleToggleSwitch = (switchName) => {\r\n        if (activeSwitches.includes(switchName)) {\r\n            dispatch(switchOff(switchName));\r\n        } else {\r\n            dispatch(switchOn(switchName));\r\n        }\r\n    };\r\n\r\n    // turn category switches on by default\r\n    // useEffect(() => {\r\n    //     categories.map((category) => handleToggleSwitch(category));\r\n    // }, []);\r\n\r\n    const getSwitchStyles = (switchName) => {\r\n        return {\r\n            backgroundColor: activeSwitches.includes(switchName) && \"var(--color-accent)\",\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={cx(horizontal_spacer, switches)}>\r\n            {categories.map((category, index) => (\r\n                <button style={getSwitchStyles(category)} onClick={() => handleToggleSwitch(category)} key={index}>\r\n                    {category}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Switches;\r\n"]},"metadata":{},"sourceType":"module"}