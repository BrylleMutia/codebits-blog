{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_POSTS, POSTS_LOADING, POSTS_LOADED } from \"../actions/types\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  isLoading: false,\n  posts: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case SET_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case POSTS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case POSTS_LOADED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Brylle Mutia/Downloads/SAVED/Python/CODE PLAYGROUND/WEB PROJECTS/## WEBAPPS/#16 CODEBITS (BLOG)/client/src/reducers/postsReducer.js"],"names":["SET_POSTS","POSTS_LOADING","POSTS_LOADED","HYDRATE","initialState","isLoading","posts","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,aAApB,EAAmCC,YAAnC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,KADM;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AACI,6CACOI,KADP,GAEOC,MAAM,CAACE,OAFd;;AAKJ,SAAKV,SAAL;AACI,6CACOO,KADP;AAEID,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFlB;;AAKJ,SAAKT,aAAL;AACI,6CACOM,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAKJ,SAAKH,YAAL;AACI,6CACOK,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIJ;AACI,aAAOE,KAAP;AAzBR;AA2BH","sourcesContent":["import { SET_POSTS, POSTS_LOADING, POSTS_LOADED } from \"../actions/types\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    posts: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        case SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n            };\r\n\r\n        case POSTS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case POSTS_LOADED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}